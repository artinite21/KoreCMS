@using Kore.Plugins.Messaging.Forums
@using Kore.Plugins.Messaging.Forums.Models

@model ForumPostModel

<a name="@Model.Id"></a>

<div class="post-parent" id="@Html.Encode(string.Concat("post", Model.Id))">
    <div class="post-container">
        <div class="post-user">
            @if (Model.AllowViewingProfiles)
            {
                @* TODO: Maybe we need to use a different profile page for forums only? *@
                @Html.ActionLink(Model.UserName, "ViewProfile", "Account", new { area = string.Empty, userId = Model.UserId }, new { @class = "username" })
            }
            else
            {
                <span class="username"><b>@Model.UserName</b></span>
            }
            <p class="avatar">
                @if (Model.IsAvatarApproved && !string.IsNullOrEmpty(Model.UserAvatarUrl))
                {
                    if (Model.AllowViewingProfiles)
                    {
                        @* TODO: Maybe we need to use a different profile page for forums only? *@
                        <a href="@Url.Action("ViewProfile", "Account", new { area = string.Empty, userId = Model.UserId })" class="avatar-img-link">
                            <img src="@(Model.UserAvatarUrl)" class="avatar-img" alt="Avatar" />
                        </a>
                    }
                    else
                    {
                        @Html.Raw(Model.UserAvatarUrl)
                    }
                }
                else
                {
                    @Html.Image("~/Content/images/Avatar.jpg", "Avatar", new { @class = "user-posted-image" })
                }
            </p>
            <ul class="list-unstyled">
                @if (Model.IsUserForumModerator)
                {
                    <li class="status">
                        <label>@T(LocalizableStrings.Status)</label>
                        <span>@T(LocalizableStrings.Moderator)</span>
                    </li>
                }
                @if (Model.ShowUsersPostCount)
                {
                    <li class="total-posts">
                        <label>@T(LocalizableStrings.TotalPosts):</label>
                        <span>@Model.ForumPostCount</span>
                    </li>
                }
                @if (Model.ShowUsersJoinDate)
                {
                    <li class="joined">
                        <label>@T(LocalizableStrings.Joined)</label>
                        <span>@Model.UserJoinDate.ToString("d")</span>
                    </li>
                }
                @if (Model.ShowUsersLocation && !string.IsNullOrEmpty(Model.UserLocation))
                {
                    <li class="location">
                        <label>@T(LocalizableStrings.Location)</label>
                        <span>@Model.UserLocation</span>
                    </li>
                }
                <li>
                    <p class="stat-value">@Model.PostCreatedOnStr</p>
                </li>
                @if (Model.IsEdited)
                {
                    <li class="location">
                        <label>Edited by the author on:</label>
                        <p>@Model.PostEditedOnStr</p>
                    </li>
                }
            </ul>
            @if (Model.AllowPrivateMessages)
            {
                if (Model.UserId != WorkContext.CurrentUser.Id)
                {
                    <p class="send-pm">
                        @if (!Model.HasBlockedUser)
                        {
                            if (!Model.BlockedByUser)
                            {
                                <a href="@Url.Action("PMCreate", "PrivateMessages", new { toUserId = Model.UserId })" class="message-user-button" title="Message user">
                                    <i class="fa fa-envelope" style="font-size: 18px;"></i>
                                </a>
                            }
                            <a href="@Url.Action("BlockUser", "PrivateMessages", new { blockedUserId = Model.UserId, isBlocked = true })" onclick="return confirm('@T(KoreWebLocalizableStrings.General.AreYouSure)');" class="block-user-button" title="Block user">
                                <i class="fa fa-user-times" style="font-size: 18px;"></i>
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("BlockUser", "PrivateMessages", new { blockedUserId = Model.UserId, isBlocked = false })" onclick="return confirm('@T(KoreWebLocalizableStrings.General.AreYouSure)');" class="btn btn-xs unblock-user-button" title="Unblock user">
                                <i class="fa fa-user" style="font-size: 18px; color: mediumseagreen"></i>
                                Unblock
                            </a>
                        }
                        <a href="@Url.Action("ReportUser", new { userId = Model.UserId })" class="report-user-button" title="Report user">
                            <i class="fa fa-user" style="font-size: 18px; color: #404040;"></i>
                            Report
                        </a>
                    </p>
                }
            }
            <br />
        </div>
        <div class="post-body">
            <div class="post-id">
                <p>
                    @if (Model.CurrentTopicPage > 1)
                    {

                        @Html.ActionLink(string.Concat("#", Model.Id), "Topic", "Forums", "http", string.Empty, Model.Id.ToString(), new { id = Model.ForumTopicId, slug = Model.ForumTopicSeName, page = Model.CurrentTopicPage }, new { @class = "btn btn-xs post-link-button", title = T(LocalizableStrings.PostLinkTitle) })

                    }
                    else
                    {

                        @Html.ActionLink(string.Concat("#", Model.Id), "Topic", "Forums", "http", string.Empty, Model.Id.ToString(), new { id = Model.ForumTopicId, slug = Model.ForumTopicSeName }, new { @class = "btn btn-xs post-link-button", title = T(LocalizableStrings.PostLinkTitle) })

                    }
                </p>
            </div>
            <div>
                @if (!Model.IsFlagged)
                {
                    <p>
                        @Html.Raw(Model.FormattedText)
                        @Html.Hidden("Id", Model.Id)
                    </p>
                }
                else
                {
                    <p>
                        <b>This post has been flagged and is currently under review.</b>
                    </p>
                }
                @if (Model.SignaturesEnabled & !string.IsNullOrEmpty(Model.FormattedSignature))
                {
                    <div class="signature">
                        @Html.Raw(Model.FormattedSignature)
                    </div>
                }
                @if (Model.UserId != WorkContext.CurrentUser.Id)
                {
                    <p>
                        <a href="@Url.Action("PostReply", new { id = Model.Id })" class="btn btn-xs reply-post-button" title="Reply to post">
                            <i class="fa fa-mail-reply" style="font-size: 16px; color: #18BC9C"></i>
                            @T(LocalizableStrings.Reply)
                        </a>
                        <a href="@Url.Action("PostCreate", new { id = Model.ForumTopicId, quote = Model.Id })" class="btn btn-xs quote-post-button" title="Quote post">
                            <i class="fa fa-quote-right" style="font-size: 16px; color: #404040;"></i>
                            @T(LocalizableStrings.QuotePost)
                        </a>
                        @if (!Model.FlaggedByUser)
                        {
                            <a href="@Url.Action("PostFlag", new { id = Model.Id, flagPost = true })" onclick="return confirm('@T(KoreWebLocalizableStrings.General.AreYouSure)');" class="btn btn-xs flag-post-button" title="Flag Post">
                                <i class="fa fa-flag-o" style="font-size: 16px; color: red;"></i>
                                Flag
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("PostFlag", new { id = Model.Id, flagPost = false })" onclick="return confirm('@T(KoreWebLocalizableStrings.General.AreYouSure)');" class="btn btn-xs clear-flag-button" title="Clear Flag">
                                <i class="fa fa-flag-o" style="font-size: 16px; color: mediumseagreen;"></i>
                                Clear flag
                            </a>
                        }
                    </p>
                }
                <p>
                    @if (Model.IsCurrentUserAllowedToEditPost)
                    {
                        <a href="@Url.Action("PostEdit", new { id = Model.Id })" class="btn btn-xs edit-post-button" title="Edit post">
                            <i class="fa fa-edit" style="font-size: 16px; color: darkgoldenrod;"></i>
                            Edit
                        </a>
                    }
                    @if (Model.IsCurrentUserAllowedToDeletePost)
                    {
                        <a href="@Url.Action("PostDelete", new { id = Model.Id })" onclick="return confirm('@T(KoreWebLocalizableStrings.General.AreYouSure)');" class="btn btn-xs delete-post-button" title="Delete post">
                            <i class="fa fa-trash-o" style="font-size: 16px; color: #404040;"></i>
                            Delete
                        </a>
                    }
                </p>
            </div>
        </div>
    </div>
</div>
